{"version":3,"sources":["App.tsx","index.tsx"],"names":["renderError","errorMessage","className","App","pass","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","gender","setGender","isGenderValid","length","isEmailValid","test","isPasswordValid","isConfirmValid","alertMessage","src","alt","method","role","aria-label","type","onClick","htmlFor","value","id","placeholder","onChange","e","target","name","required","alert","disabled","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAqBMA,EAAc,SAACC,GAAD,OAClB,sBAAMC,UAAU,eAAhB,SAAgCD,KAGrBE,EAAgB,WAC3B,IAWiCC,EAXjC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAYMC,EAAkC,IAAlBF,EAAOG,OACvBC,EAVO,6GAEDC,KAQwBX,GAC9BY,EAAkBV,EAASO,QAAU,EACrCI,GAP2Bf,EAOcI,KAAUE,GANR,IAAhBN,EAAKW,OAShCK,EAAY,mBAAeR,EAAf,sBAAmCN,EAAnC,yBAAyDE,GAE3E,OACE,sBAAKN,UAAU,MAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,qBACEmB,IAAI,aACJC,IAAI,SAEN,oBAAIpB,UAAU,gBAAd,mCAGF,uBAAMqB,OAAO,OAAb,UAEE,sBAAKrB,UAAU,qBAAf,UACE,oBAAIA,UAAU,cAAd,oBACA,sBAAKA,UAAU,cAAcsB,KAAK,QAAQC,aAAW,gBAArD,UACE,yBACEC,KAAK,SACLxB,UAAU,eACVyB,QAAS,kBAAMd,EAAU,SAH3B,UAKE,qBAAKQ,IAAI,aAAaC,IAAI,cAC1B,oBAAIpB,UAAU,qBAAd,qBAEF,yBACEwB,KAAK,SACLxB,UAAU,eACVyB,QAAS,kBAAMd,EAAU,WAH3B,UAKE,qBAAKQ,IAAI,eAAeC,IAAI,gBAL9B,YAQA,yBACEI,KAAK,SACLxB,UAAU,eACVyB,QAAS,kBAAMd,EAAU,UAH3B,UAKE,qBAAKQ,IAAI,cAAcC,IAAI,eAL7B,iBAWJ,qBAAKpB,UAAU,cAAf,SACE,wBAAO0B,QAAQ,qBAAqB1B,UAAU,aAA9C,mBAEE,uBACE2B,MAAOvB,EACPoB,KAAK,QACLxB,UAAU,eACV4B,GAAG,qBACHC,YAAY,qBACZC,SAAU,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,OAAOL,UAEjCb,GAAiC,IAAjBV,EAAMS,OAAgD,KAAjCf,EAAY,wBAIvD,qBAAKE,UAAU,cAAf,SACE,wBAAO0B,QAAQ,wBAAwB1B,UAAU,aAAjD,4BAEE,uBACE2B,MAAOrB,EACPkB,KAAK,WACLS,KAAK,WACLjC,UAAU,eACV4B,GAAG,wBACHE,SAAU,SAAAC,GAAC,OAAIxB,EAAYwB,EAAEC,OAAOL,QACpCO,UAAQ,IAERlB,GAAuC,IAApBV,EAASO,OAAmD,KAApCf,EAAY,2BAI7D,qBAAKE,UAAU,cAAf,SACE,wBAAO0B,QAAQ,wBAAwB1B,UAAU,aAAjD,6BAEE,uBACE2B,MAAOnB,EACPgB,KAAK,WACLxB,UAAU,eACV4B,GAAG,wBACHE,SAAU,SAAAC,GAAC,OAAItB,EAAmBsB,EAAEC,OAAOL,QAC3CO,UAAQ,IAERjB,GAAsC,IAApBX,EAASO,OAA2D,KAA5Cf,EAAY,mCAI5D,wBACE0B,KAAK,SACLxB,UAAU,uBACVyB,QAAS,WAEPU,MAAMjB,IAERkB,UAAWxB,IAAkBE,IAAiBE,IAAoBC,EAPpE,uBAaF,yBAAQjB,UAAU,qBAAlB,UACE,qBAAKA,UAAU,gBAAf,SACE,yDAEE,mBAAGqC,KAAK,IAAIrC,UAAU,eAAtB,0BAIJ,qBAAKA,UAAU,gBAAf,SACE,+DAEE,mBAAGqC,KAAK,IAAIrC,UAAU,eAAtB,+BC5JZsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b383e477.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface Props {\n  onClick: () => void;\n}\n\nexport const Provider: React.FC<Props> = React.memo(\n  ({ onClick, children }) => (\n    <button\n      type=\"button\"\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  ),\n);\n\nconst renderError = (errorMessage: {} | null | undefined) => (\n  <span className=\"errorMessage\">{errorMessage}</span>\n);\n\nexport const App: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [gender, setGender] = useState('');\n\n  const emailValidator = (clientEmail: string) => {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n    return re.test(clientEmail);\n  };\n\n  const confirmPasswordValidate = (pass: string, confirmPass: string) => {\n    return pass === confirmPass && pass.length !== 0;\n  };\n\n  const isGenderValid = gender.length !== 0;\n  const isEmailValid = emailValidator(email);\n  const isPasswordValid = password.length >= 6;\n  const isConfirmValid = confirmPasswordValidate(password, passwordConfirm);\n\n  // eslint-disable-next-line no-useless-concat\n  const alertMessage = `gender : ${gender} \\nemail : ${email} \\npassword : ${password}`;\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img\n          src=\"./icon.png\"\n          alt=\"icon\"\n        />\n        <h1 className=\"header__title\">Sign Up with email</h1>\n      </header>\n\n      <form method=\"post\">\n\n        <div className=\"d-flex flex-column\">\n          <h2 className=\"form__title\">Gender</h2>\n          <div className=\"form__group\" role=\"group\" aria-label=\"Basic example\">\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => setGender('Male')}\n            >\n              <img src=\"./male.png\" alt=\"male_icon\" />\n              <h3 className=\"form__button--text\">Male</h3>\n            </button>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => setGender('Female')}\n            >\n              <img src=\"./female.png\" alt=\"female_icon\" />\n              Female\n            </button>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => setGender('Other')}\n            >\n              <img src=\"./other.png\" alt=\"other_icon\" />\n              Other\n            </button>\n          </div>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            E-mail\n            <input\n              value={email}\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"johnsmith@mail.com\"\n              onChange={e => setEmail(e.target.value)}\n            />\n            {!isEmailValid && email.length !== 0 ? renderError('Email not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Create Password\n            <input\n              value={password}\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            {!isPasswordValid && password.length !== 0 ? renderError('Password not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Confirm Password\n            <input\n              value={passwordConfirm}\n              type=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPasswordConfirm(e.target.value)}\n              required\n            />\n            {!isConfirmValid && password.length !== 0 ? renderError('Confirm password not valid') : null}\n          </label>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"form__button--singUp\"\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            alert(alertMessage);\n          }}\n          disabled={!isGenderValid && !isEmailValid && !isPasswordValid && !isConfirmValid}\n        >\n          Submit\n        </button>\n      </form>\n\n      <footer className=\"d-flex flex-column\">\n        <div className=\"d-inline-flex\">\n          <p>\n            Already have an account?\n            <a href=\"#\" className=\"link-success\"> Log In</a>\n          </p>\n\n        </div>\n        <div className=\"d-inline-flex\">\n          <p>\n            Review privacy and disclosures\n            <a href=\"#\" className=\"link-success\"> here</a>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}