{"version":3,"sources":["App.tsx","index.tsx"],"names":["renderError","errorMessage","className","App","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","gender","setGender","hidePassword","setHidePassword","console","log","pass","isGenderValid","length","isEmailValid","test","isPasswordValid","isConfirmValid","alertMessage","src","alt","method","role","aria-label","type","onClick","htmlFor","value","id","placeholder","onChange","e","target","name","required","alert","disabled","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3442dde1.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\ninterface Props {\n  onClick: () => void;\n}\n\nexport const Provider: React.FC<Props> = React.memo(\n  ({ onClick, children }) => (\n    <button\n      type=\"button\"\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  ),\n);\n\nconst renderError = (errorMessage: {} | null | undefined) => (\n  <span className=\"errorMessage\">{errorMessage}</span>\n);\n\nexport const App: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [gender, setGender] = useState('');\n  const [hidePassword, setHidePassword] = useState(true);\n\n  console.log(hidePassword);\n\n  const emailValidator = (clientEmail: string) => {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n    return re.test(clientEmail);\n  };\n\n  const confirmPasswordValidate = (pass: string, confirmPass: string) => {\n    return pass === confirmPass && pass.length !== 0;\n  };\n\n  const isGenderValid = gender.length !== 0;\n  const isEmailValid = emailValidator(email);\n  const isPasswordValid = password.length >= 6;\n  const isConfirmValid = confirmPasswordValidate(password, passwordConfirm);\n\n  // eslint-disable-next-line no-useless-concat\n  const alertMessage = `gender : ${gender} \\nemail : ${email} \\npassword : ${password}`;\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img\n          src=\"./icon.png\"\n          alt=\"icon\"\n        />\n        <h1 className=\"header__title\">Sign Up with email</h1>\n      </header>\n\n      <form method=\"post\" className=\"form\">\n\n        <div className=\"d-flex flex-column align\">\n          <h2 className=\"form__title\">Gender</h2>\n          <div className=\"form__group\" role=\"group\" aria-label=\"Basic example\">\n            <button\n              type=\"button\"\n              className={gender === 'Male' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Male')}\n            >\n              <img src=\"./male.png\" alt=\"male_icon\" />\n              <h3 className=\"form__button--text\">Male</h3>\n            </button>\n            <button\n              type=\"button\"\n              className={gender === 'Female' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Female')}\n            >\n              <img src=\"./female.png\" alt=\"female_icon\" />\n              Female\n            </button>\n            <button\n              type=\"button\"\n              className={gender === 'Other' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Other')}\n            >\n              <img src=\"./other.png\" alt=\"other_icon\" />\n              Other\n            </button>\n          </div>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            E-mail\n            <input\n              value={email}\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"johnsmith@mail.com\"\n              onChange={e => setEmail(e.target.value)}\n            />\n            {!isEmailValid && email.length !== 0 ? renderError('Email not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Create Password\n            <input\n              value={password}\n              type={hidePassword ? 'password' : 'text'}\n              name=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {!isPasswordValid && password.length !== 0 ? renderError('Password not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Confirm Password\n            <input\n              value={passwordConfirm}\n              type={hidePassword ? 'password' : 'text'}\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPasswordConfirm(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {!isConfirmValid && password.length !== 0 ? renderError('Confirm password not valid') : null}\n          </label>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"form__button--singUp\"\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            alert(alertMessage);\n          }}\n          disabled={!isGenderValid || !isEmailValid || !isPasswordValid || !isConfirmValid}\n        >\n          Submit\n        </button>\n      </form>\n\n      <footer className=\"d-flex flex-column\">\n        <div className=\"d-inline-flex\">\n          <p>\n            Already have an account?\n            <a href=\"#\" className=\"link-success\"> Log In</a>\n          </p>\n\n        </div>\n        <div className=\"d-inline-flex\">\n          <p>\n            Review privacy and disclosures\n            <a href=\"#\" className=\"link-success\"> here</a>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}