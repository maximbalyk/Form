{"version":3,"sources":["App.tsx","index.tsx"],"names":["renderError","errorMessage","className","App","pass","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","gender","setGender","hidePassword","setHidePassword","isGenderValid","length","isEmailValid","test","isPasswordValid","isConfirmValid","alertMessage","src","alt","method","role","aria-label","type","onClick","htmlFor","value","id","placeholder","onChange","e","target","name","required","alert","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7ef5174.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst renderError = (errorMessage: {} | null | undefined) => (\n  <span className=\"errorMessage\">{errorMessage}</span>\n);\n\nexport const App: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [gender, setGender] = useState('');\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const emailValidator = (clientEmail: string) => {\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n\n    return re.test(clientEmail);\n  };\n\n  const confirmPasswordValidate = (pass: string, confirmPass: string) => {\n    return pass === confirmPass && pass.length !== 0;\n  };\n\n  const isGenderValid = gender.length !== 0;\n  const isEmailValid = emailValidator(email);\n  const isPasswordValid = password.length >= 6;\n  const isConfirmValid = confirmPasswordValidate(password, passwordConfirm);\n\n  // eslint-disable-next-line no-useless-concat\n  const alertMessage = `gender : ${gender} \\nemail : ${email} \\npassword : ${password}`;\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img\n          src=\"./icon.png\"\n          alt=\"icon\"\n        />\n        <h1 className=\"header__title\">Sign Up with email</h1>\n      </header>\n\n      <form method=\"post\" className=\"form\">\n\n        <div className=\"d-flex flex-column align\">\n          <h2 className=\"form__title\">Gender</h2>\n          <div className=\"form__group\" role=\"group\" aria-label=\"Basic example\">\n            <button\n              type=\"button\"\n              className={gender === 'Male' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Male')}\n            >\n              <img src=\"./male.png\" alt=\"male_icon\" />\n              <h3\n                className={gender === 'Male' ? 'form__button--text form__button--text--selected' : 'form__button--text'}\n              >\n                Male\n              </h3>\n            </button>\n            <button\n              type=\"button\"\n              className={gender === 'Female' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Female')}\n            >\n              <img src=\"./female.png\" alt=\"female_icon\" />\n              Female\n            </button>\n            <button\n              type=\"button\"\n              className={gender === 'Other' ? 'form__button form__button--active' : 'form__button'}\n              onClick={() => setGender('Other')}\n            >\n              <img src=\"./other.png\" alt=\"other_icon\" />\n              Other\n            </button>\n          </div>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            E-mail\n            <input\n              value={email}\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"johnsmith@mail.com\"\n              onChange={e => setEmail(e.target.value)}\n            />\n            {!isEmailValid && email.length !== 0 ? renderError('Email not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Create Password\n            <input\n              value={password}\n              type={hidePassword ? 'password' : 'text'}\n              name=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPassword(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {!isPasswordValid && password.length !== 0 ? renderError('Password not valid') : null}\n          </label>\n        </div>\n\n        <div className=\"form__input\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Confirm Password\n            <input\n              value={passwordConfirm}\n              type={hidePassword ? 'password' : 'text'}\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              onChange={e => setPasswordConfirm(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"form__button--showPassword\"\n              onClick={() => setHidePassword(!hidePassword)}\n            >\n              <img src=\"./eye.svg\" alt=\"showPassword\" />\n            </button>\n            {!isConfirmValid && password.length !== 0 ? renderError('Confirm password not valid') : null}\n          </label>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"form__button--singUp\"\n          onClick={() => {\n            if (isGenderValid && isEmailValid && isPasswordValid && isConfirmValid) {\n              // eslint-disable-next-line no-alert\n              alert(alertMessage);\n            } else {\n              // eslint-disable-next-line no-alert\n              alert('Fill in all the fields');\n            }\n          }}\n        >\n          Submit\n        </button>\n      </form>\n\n      <footer className=\"d-flex flex-column\">\n        <div className=\"d-inline-flex\">\n          <p>\n            Already have an account?\n            <a href=\"#\" className=\"link-success\"> Log In</a>\n          </p>\n\n        </div>\n        <div className=\"d-inline-flex\">\n          <p>\n            Review privacy and disclosures\n            <a href=\"#\" className=\"link-success\"> here</a>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}